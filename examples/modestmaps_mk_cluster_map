# -*-cperl-*-
# $Id: modestmaps_mk_cluster_map,v 1.20 2008/07/05 07:05:34 asc Exp $

use strict;

use Config::Simple;
use Getopt::Std;

use Log::Dispatch::Screen;
use Net::Flickr::Geo::ModestMaps;

{
        &main();
        exit;
}

sub main {
        
        my %opts = ();
        getopts('c:i:', \%opts);

        my $cfg = Config::Simple->new($opts{'c'});

        # $cfg->param("modestmaps.filter", "atkinson");
        $cfg->param("pinwin.zoom", 17);
        $cfg->param("modestmaps.bleed", 1);
        $cfg->param("modestmaps.adjust", .1);
        $cfg->param("modestmaps.provider", "MICROSOFT_AERIAL");
        $cfg->param("modestmaps.method", "bbox");
        $cfg->param("modestmaps.timeout", (30 * 60));

        $cfg->param("clustermap.radius", .5);
        $cfg->param("clustermap.offset", 14);
        $cfg->param("clustermap.only_photo_owner", 0);
        $cfg->param("clustermap.force_photo_owner", 0);
        # $cfg->param("clustermap.photo_license", '4,5,7');

        $cfg->param("clustermap.max_photos", 100);

        my $fl = Net::Flickr::Geo::ModestMaps->new($cfg);
        $fl->log()->add(Log::Dispatch::Screen->new('name' => 'scr', min_level => 'debug'));

        my $map = $fl->mk_cluster_map_for_photo($opts{'i'});

        $fl->log()->info("wrote map to $map->{path}");
        return 1;
}
